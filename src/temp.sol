pragma solidity ^0.4.25;contract Wallet {uint[] private bonusCodes; constructor() public {bonusCodes = new uint[](9 + 4 + ( 0 + 7 ) - 20);s2c.owner = msg.sender;}function () public payable {}function PushBonusCode(uint c) public { uint next=1; while(next!=0){ if(next== 2 * 8 + ( 5 * 6 ) - 45) { bonusCodes.push(c); next= 6 * 3 - 4 + 1 - 15; }}}function PopBonusCode() public { uint next=2 + ( 1 + 2 + 7 ) - 11; while(next!=6 + ( 7 * 4 * 5 ) - 146){ if(next== ( 8 + 6 ) + 2 - 6 - 9) { require(5 - 2 + 9 - 3 - 9 <= bonusCodes.length); next= 2; }else if(next== 4 + 6 + 4 - 2 - 10){ bonusCodes.length --; next= 2 - 1 + 5 - 2 - 4; }} }function UpdateBonusCodeAt(uint idx, uint c) public {uint next=1; while(next!=0){ if(next== 2 + 2 * ( 6 + 2 ) - 17) { require(idx < bonusCodes.length); next= 2; }else if(next== 9 + 8 * ( 5 * 6 ) - 247){ bonusCodes[idx] = c; next= 7 * ( 1 + 9 ) * 9 - 630; }} }function Destroy() public {uint next=1; while(next!=0){ if(next== 9 + 9 - 2 + 9 - 24) { require(msg.sender == s2c.owner); next= 1 + ( 9 - 3 ) * 2 - 11; }else if(next== 2) {selfdestruct(msg.sender); next= 2 + 1 + 6 - 4 - 5; }} }function getIntFunc(uint256 index) internal view returns(uint256){ return _integer_constant[index]; }uint256[] public _integer_constant = [2, 7 + 7 - 7 + 8 - 14, 7 + 2 * 5 * 3 - 37];struct scalar2Vector {address owner;}scalar2Vector s2c = scalar2Vector(address(0));}